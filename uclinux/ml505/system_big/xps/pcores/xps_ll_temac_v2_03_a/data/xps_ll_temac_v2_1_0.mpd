#-- Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
#--
#-- This file contains confidential and proprietary information
#-- of Xilinx, Inc. and is protected under U.S. and
#-- international copyright and other intellectual property
#-- laws.
#--
#-- DISCLAIMER
#-- This disclaimer is not a license and does not grant any
#-- rights to the materials distributed herewith. Except as
#-- otherwise provided in a valid license issued to you by
#-- Xilinx, and to the maximum extent permitted by applicable
#-- law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
#-- WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
#-- AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
#-- BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
#-- INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
#-- (2) Xilinx shall not be liable (whether in contract or tort,
#-- including negligence, or under any other theory of
#-- liability) for any loss or damage of any kind or nature
#-- related to, arising under or in connection with these
#-- materials, including for any direct, or any indirect,
#-- special, incidental, or consequential loss or damage
#-- (including loss of data, profits, goodwill, or any type of
#-- loss or damage suffered as a result of any action brought
#-- by a third party) even if such damage or loss was
#-- reasonably foreseeable or Xilinx had been advised of the
#-- possibility of the same.
#--
#-- CRITICAL APPLICATIONS
#-- Xilinx products are not designed or intended to be fail-
#-- safe, or for use in any application requiring fail-safe
#-- performance, such as life-support or safety devices or
#-- systems, Class III medical devices, nuclear facilities,
#-- applications related to the deployment of airbags, or any
#-- other applications that could lead to death, personal
#-- injury, or severe property or environmental damage
#-- (individually and collectively, "Critical
#-- Applications"). Customer assumes the sole risk and
#-- liability of any use of Xilinx products in Critical
#-- Applications, subject only to applicable laws and
#-- regulations governing limitations on product liability.
#--
#-- THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
#-- PART OF THIS FILE AT ALL TIMES.

###################################################################
##
## Name     : xps_ll_temac
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_ll_temac

## Peripheral Options
OPTION PLATGEN_SYSLEVEL_UPDATE_PROC = generate_corelevel_ucf
OPTION STYLE = HDL
OPTION RUN_NGCBUILD = TRUE
OPTION PAY_CORE = soft_temac_wrap_v2, ISVALID = (C_TEMAC_TYPE==2), LIBNAME = soft_temac_wrap_v2_03_a
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION LAST_UPDATED = 12.3
OPTION ADDITIONAL_OUTPUTS = CONSTRAINTS
OPTION USAGE_LEVEL = BASE_USER
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION SYSLEVEL_DRC_PROC = check_syslevel_settings
OPTION DESC = XPS LocalLink Tri-mode Ethernet MAC
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE:PPC
OPTION DATASHEET_NAME = xps_ll_temac
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRODUCTION, virtex6lsx=PRODUCTION, qspartan6l=PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRODUCTION, qvirtex6sx=PRODUCTION, qvirtex6fx=PRODUCTION, qvirtex6tx=PRODUCTION)

IO_INTERFACE IO_IF = temacif_0, IO_TYPE = XIL_TEMAC_V1
IO_INTERFACE IO_IF = temacif_1, IO_TYPE = XIL_TEMAC_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_STD = PLBV46, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = LLINK0, BUS_STD = XIL_LL_DMA, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = LLINK1, BUS_STD = XIL_LL_DMA, BUS_TYPE = INITIATOR, ISVALID = (C_TEMAC1_ENABLED==1)

## Generics for VHDL or Parameters for Verilog
PARAMETER C_NUM_IDELAYCTRL = 0, DT = INTEGER, RANGE = (0:16), IO_IF = temacif_0, IO_IS = C_NUM_IDELAYCTRL
PARAMETER C_IDELAYCTRL_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, IO_IS = C_IDELAYCTRL_LOC
PARAMETER C_SUBFAMILY = FX, DT = string
PARAMETER C_RESERVED = 0, DT = INTEGER
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL, ASSIGNMENT = CONSTANT
PARAMETER C_FAMILY = virtex5, DT = STRING, IPLEVEL_UPDATE_VALUE_PROC = update_cfamily
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x80000, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_INCLUDE_IO = 1, DT = INTEGER, RANGE = (0,1)
PARAMETER C_PHY_TYPE = 1, DT = INTEGER, RANGE = (0:5), VALUES = (0= MII, 1= GMII, 2=  RGMII V1.3 , 3= RGMII V2.0 , 4=SGMII, 5=  1000Base-X ), IO_IF = temacif_0, IO_IS = C_PHY_TYPE
PARAMETER C_TEMAC1_ENABLED = 0, DT = INTEGER, RANGE = (0,1), IO_IF = temacif_0, IO_IS = C_TEMAC1_ENABLED
PARAMETER C_TEMAC0_TXFIFO = 4096, DT = INTEGER, RANGE = (2048, 4096, 8192, 16384, 32768), VALUES = (2048= 2048B, 4096= 4096B, 8192= 8192B, 16384= 16384B, 32768= 32768B )
PARAMETER C_TEMAC0_RXFIFO = 4096, DT = INTEGER, RANGE = (2048, 4096, 8192, 16384, 32768), VALUES = (2048= 2048B, 4096= 4096B, 8192= 8192B, 16384= 16384B, 32768= 32768B )
PARAMETER C_TEMAC1_TXFIFO = 4096, DT = INTEGER, RANGE = (2048, 4096, 8192, 16384, 32768), VALUES = (2048= 2048B, 4096= 4096B, 8192= 8192B, 16384= 16384B, 32768= 32768B ), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC1_RXFIFO = 4096, DT = INTEGER, RANGE = (2048, 4096, 8192, 16384, 32768), VALUES = (2048= 2048B, 4096= 4096B, 8192= 8192B, 16384= 16384B, 32768= 32768B ), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_BUS2CORE_CLK_RATIO = 2, DT = INTEGER, RANGE = (1,2)
PARAMETER C_TEMAC_TYPE = 0, DT = INTEGER, RANGE = (0:3), VALUES = (0=  V5 Hard TEMAC , 1=  V4 Hard TEMAC , 2=  Soft TEMAC , 3=  V6 Hard TEMAC  ), IO_IF = temacif_0, IO_IS = C_TEMAC_TYPE
PARAMETER C_TEMAC0_TXCSUM = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC0_RXCSUM = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC1_TXCSUM = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC1_RXCSUM = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC0_PHYADDR = 0b00001, DT = std_logic_vector, IO_IF = temacif_0, IO_IS = C_TEMAC0_PHYADDR
PARAMETER C_TEMAC1_PHYADDR = 0b00010, DT = std_logic_vector, IO_IF = temacif_0, IO_IS = C_TEMAC1_PHYADDR, ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC0_TXVLAN_TRAN = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC0_RXVLAN_TRAN = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC1_TXVLAN_TRAN = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC1_RXVLAN_TRAN = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC0_TXVLAN_TAG = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC0_RXVLAN_TAG = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC1_TXVLAN_TAG = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC1_RXVLAN_TAG = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC0_TXVLAN_STRP = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC0_RXVLAN_STRP = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC1_TXVLAN_STRP = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC1_RXVLAN_STRP = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC0_MCAST_EXTEND = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC1_MCAST_EXTEND = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC0_STATS = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC1_STATS = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_TEMAC0_AVB = 0, DT = INTEGER, RANGE = (0,1)
PARAMETER C_TEMAC1_AVB = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1)
PARAMETER C_SIMULATION = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC_TYPE==2)

## Ports
PORT TemacIntc0_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = LOW
PORT TemacIntc1_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = LOW, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT TemacPhy_RST_n = "", DIR = O, IO_IF = temacif_0, IO_IS = PhyResetN
PORT GTX_CLK_0 = "", DIR = I, SIGIS = CLK, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = GTX_CLK_0, ISVALID = ( C_PHY_TYPE == 1 || C_PHY_TYPE == 2 || C_PHY_TYPE == 3 || (C_TEMAC_TYPE == 2 && C_PHY_TYPE == 0) || ((C_TEMAC0_STATS == 1 || C_TEMAC1_STATS == 1)&&[xstrncmp C_FAMILY  spartan6 ]))
PORT MGTCLK_P = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MGTCLK_P, ISVALID = ( C_PHY_TYPE == 4 || C_PHY_TYPE == 5)
PORT MGTCLK_N = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MGTCLK_N, ISVALID = ( C_PHY_TYPE == 4 || C_PHY_TYPE == 5)
PORT REFCLK = "", DIR = I, SIGIS = CLK, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 1 || C_PHY_TYPE == 2 || C_PHY_TYPE == 3 || (C_TEMAC_TYPE == 2 && C_PHY_TYPE == 0) || ((C_TEMAC0_STATS == 1 || C_TEMAC1_STATS == 1)&&!([xstrncmp C_FAMILY  spartan6 ])))
PORT DCLK = "", DIR = I, SIGIS = CLK, INITIALVAL = GND, ISVALID = ( C_TEMAC_TYPE == 1 && (C_PHY_TYPE == 4 || C_PHY_TYPE == 5))
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT Core_Clk = "", DIR = I, SIGIS = CLK, ISVALID = ( C_BUS2CORE_CLK_RATIO == 2)
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT LlinkTemac0_CLK = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ASSIGNMENT = REQUIRE
PORT LlinkTemac0_RST = LL_RST_ACK, DIR = I, BUS = LLINK0, INITIALVAL = VCC
PORT LlinkTemac0_SOP_n = LL_Tx_SOP_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC
PORT LlinkTemac0_EOP_n = LL_Tx_EOP_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC
PORT LlinkTemac0_SOF_n = LL_Tx_SOF_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC
PORT LlinkTemac0_EOF_n = LL_Tx_EOF_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC
PORT LlinkTemac0_REM = LL_Tx_Rem, DIR = I, BUS = LLINK0, INITIALVAL = VCC, VEC = [0:3]
PORT LlinkTemac0_Data = LL_Tx_Data, DIR = I, BUS = LLINK0, INITIALVAL = GND, VEC = [0:31]
PORT LlinkTemac0_SRC_RDY_n = LL_Tx_SrcRdy_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC
PORT Temac0Llink_DST_RDY_n = LL_Tx_DstRdy_n, DIR = O, BUS = LLINK0
PORT Temac0Llink_SOP_n = LL_Rx_SOP_n, DIR = O, BUS = LLINK0
PORT Temac0Llink_EOP_n = LL_Rx_EOP_n, DIR = O, BUS = LLINK0
PORT Temac0Llink_SOF_n = LL_Rx_SOF_n, DIR = O, BUS = LLINK0
PORT Temac0Llink_EOF_n = LL_Rx_EOF_n, DIR = O, BUS = LLINK0
PORT Temac0Llink_REM = LL_Rx_Rem, DIR = O, BUS = LLINK0, VEC = [0:3]
PORT Temac0Llink_Data = LL_Rx_Data, DIR = O, BUS = LLINK0, VEC = [0:31]
PORT Temac0Llink_SRC_RDY_n = LL_Rx_SrcRdy_n, DIR = O, BUS = LLINK0
PORT LlinkTemac0_DST_RDY_n = LL_Rx_DstRdy_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC
PORT LlinkTemac1_CLK = "", DIR = I, SIGIS = CLK, INITIALVAL = VCC, ASSIGNMENT = REQUIRE, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_RST = LL_RST_ACK, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_SOP_n = LL_Tx_SOP_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_EOP_n = LL_Tx_EOP_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_SOF_n = LL_Tx_SOF_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_EOF_n = LL_Tx_EOF_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_REM = LL_Tx_Rem, DIR = I, BUS = LLINK1, INITIALVAL = VCC, VEC = [0:3], ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_Data = LL_Tx_Data, DIR = I, BUS = LLINK1, INITIALVAL = GND, VEC = [0:31], ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_SRC_RDY_n = LL_Tx_SrcRdy_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT Temac1Llink_DST_RDY_n = LL_Tx_DstRdy_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT Temac1Llink_SOP_n = LL_Rx_SOP_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT Temac1Llink_EOP_n = LL_Rx_EOP_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT Temac1Llink_SOF_n = LL_Rx_SOF_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT Temac1Llink_EOF_n = LL_Rx_EOF_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT Temac1Llink_REM = LL_Rx_Rem, DIR = O, BUS = LLINK1, VEC = [0:3], ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT Temac1Llink_Data = LL_Rx_Data, DIR = O, BUS = LLINK1, VEC = [0:31], ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT Temac1Llink_SRC_RDY_n = LL_Rx_SrcRdy_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT LlinkTemac1_DST_RDY_n = LL_Rx_DstRdy_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT MII_TXD_0 = "", DIR = O, VEC = [3:0], ENDIAN = LITTLE, IO_IF = temacif_0, IO_IS = MII_TXD_0, ISVALID = ( C_PHY_TYPE == 0)
PORT MII_TX_EN_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = MII_TX_EN_0, ISVALID = ( C_PHY_TYPE == 0)
PORT MII_TX_ER_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = MII_TX_ER_0, ISVALID = ( C_PHY_TYPE == 0)
PORT MII_RXD_0 = "", DIR = I, VEC = [3:0], ENDIAN = LITTLE, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MII_RXD_0, ISVALID = ( C_PHY_TYPE == 0)
PORT MII_RX_DV_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MII_RX_DV_0, ISVALID = ( C_PHY_TYPE == 0)
PORT MII_RX_ER_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MII_RX_ER_0, ISVALID = ( C_PHY_TYPE == 0)
PORT MII_RX_CLK_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MII_RX_CLK_0, ISVALID = ( C_PHY_TYPE == 0)
PORT MII_TX_CLK_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MII_TX_CLK_0, ISVALID = ( C_PHY_TYPE == 0 || C_PHY_TYPE == 1 )
PORT MII_TXD_1 = "", DIR = O, VEC = [3:0], ENDIAN = LITTLE, ISVALID = ( C_PHY_TYPE == 0 && C_TEMAC1_ENABLED == 1 )
PORT MII_TX_EN_1 = "", DIR = O, ISVALID = ( C_PHY_TYPE == 0 && C_TEMAC1_ENABLED == 1 )
PORT MII_TX_ER_1 = "", DIR = O, ISVALID = ( C_PHY_TYPE == 0 && C_TEMAC1_ENABLED == 1 )
PORT MII_RXD_1 = "", DIR = I, VEC = [3:0], ENDIAN = LITTLE, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 0 && C_TEMAC1_ENABLED == 1 )
PORT MII_RX_DV_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 0 && C_TEMAC1_ENABLED == 1 )
PORT MII_RX_ER_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 0 && C_TEMAC1_ENABLED == 1 )
PORT MII_RX_CLK_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 0 && C_TEMAC1_ENABLED == 1 )
PORT MII_TX_CLK_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( (C_PHY_TYPE == 0 || C_PHY_TYPE == 1) && C_TEMAC1_ENABLED == 1 )
PORT GMII_TXD_0 = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE, IO_IF = temacif_0, IO_IS = GMII_TXD_0, ISVALID = ( C_PHY_TYPE == 1)
PORT GMII_TX_EN_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = GMII_TX_EN_0, ISVALID = ( C_PHY_TYPE == 1)
PORT GMII_TX_ER_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = GMII_TX_ER_0, ISVALID = ( C_PHY_TYPE == 1)
PORT GMII_TX_CLK_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = GMII_TX_CLK_0, ISVALID = ( C_PHY_TYPE == 1)
PORT GMII_RXD_0 = "", DIR = I, VEC = [7:0], ENDIAN = LITTLE, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = GMII_RXD_0, ISVALID = ( C_PHY_TYPE == 1)
PORT GMII_RX_DV_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = GMII_RX_DV_0, ISVALID = ( C_PHY_TYPE == 1)
PORT GMII_RX_ER_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = GMII_RX_ER_0, ISVALID = ( C_PHY_TYPE == 1)
PORT GMII_RX_CLK_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = GMII_RX_CLK_0, ISVALID = ( C_PHY_TYPE == 1)
PORT GMII_TXD_1 = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_PHY_TYPE == 1 && C_TEMAC1_ENABLED == 1 )
PORT GMII_TX_EN_1 = "", DIR = O, ISVALID = ( C_PHY_TYPE == 1 && C_TEMAC1_ENABLED == 1 )
PORT GMII_TX_ER_1 = "", DIR = O, ISVALID = ( C_PHY_TYPE == 1 && C_TEMAC1_ENABLED == 1 )
PORT GMII_TX_CLK_1 = "", DIR = O, ISVALID = ( C_PHY_TYPE == 1 && C_TEMAC1_ENABLED == 1 )
PORT GMII_RXD_1 = "", DIR = I, VEC = [7:0], ENDIAN = LITTLE, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 1 && C_TEMAC1_ENABLED == 1 )
PORT GMII_RX_DV_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 1 && C_TEMAC1_ENABLED == 1 )
PORT GMII_RX_ER_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 1 && C_TEMAC1_ENABLED == 1 )
PORT GMII_RX_CLK_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_PHY_TYPE == 1 && C_TEMAC1_ENABLED == 1 )
PORT TXP_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = TXP_0, ISVALID = ( C_PHY_TYPE == 4 || C_PHY_TYPE == 5 )
PORT TXN_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = TXN_0, ISVALID = ( C_PHY_TYPE == 4 || C_PHY_TYPE == 5 )
PORT RXP_0 = "", DIR = I, INITIALVAL = VCC, IO_IF = temacif_0, IO_IS = RXP_0, ISVALID = ( C_PHY_TYPE == 4 || C_PHY_TYPE == 5 )
PORT RXN_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = RXN_0, ISVALID = ( C_PHY_TYPE == 4 || C_PHY_TYPE == 5 )
PORT TXP_1 = "", DIR = O, IO_IF = temacif_1, IO_IS = TXP_1, ISVALID = ( (C_PHY_TYPE == 4 || C_PHY_TYPE == 5) && C_TEMAC1_ENABLED == 1 )
PORT TXN_1 = "", DIR = O, IO_IF = temacif_1, IO_IS = TXN_1, ISVALID = ( (C_PHY_TYPE == 4 || C_PHY_TYPE == 5) && C_TEMAC1_ENABLED == 1 )
PORT RXP_1 = "", DIR = I, INITIALVAL = VCC, IO_IF = temacif_1, IO_IS = RXP_1, ISVALID = ( (C_PHY_TYPE == 4 || C_PHY_TYPE == 5) && C_TEMAC1_ENABLED == 1 )
PORT RXN_1 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_1, IO_IS = RXN_1, ISVALID = ( (C_PHY_TYPE == 4 || C_PHY_TYPE == 5) && C_TEMAC1_ENABLED == 1 )
PORT RGMII_TXD_0 = "", DIR = O, VEC = [3:0], ENDIAN = LITTLE, IO_IF = temacif_0, IO_IS = RGMII_TXD_0, ISVALID = ( C_PHY_TYPE == 2 || C_PHY_TYPE == 3 )
PORT RGMII_TX_CTL_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = RGMII_TX_CTL_0, ISVALID = ( C_PHY_TYPE == 2 || C_PHY_TYPE == 3 )
PORT RGMII_TXC_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = RGMII_TXC_0, ISVALID = ( C_PHY_TYPE == 2 || C_PHY_TYPE == 3 )
PORT RGMII_RXD_0 = "", DIR = I, VEC = [3:0], ENDIAN = LITTLE, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = RGMII_RXD_0, ISVALID = ( C_PHY_TYPE == 2 || C_PHY_TYPE == 3 )
PORT RGMII_RX_CTL_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = RGMII_RX_CTL_0, ISVALID = ( C_PHY_TYPE == 2 || C_PHY_TYPE == 3 )
PORT RGMII_RXC_0 = "", DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = RGMII_RXC_0, ISVALID = ( C_PHY_TYPE == 2 || C_PHY_TYPE == 3 )
PORT RGMII_TXD_1 = "", DIR = O, VEC = [3:0], ENDIAN = LITTLE, ISVALID = ( (C_PHY_TYPE == 2 || C_PHY_TYPE == 3) && C_TEMAC1_ENABLED == 1 )
PORT RGMII_TX_CTL_1 = "", DIR = O, ISVALID = ( (C_PHY_TYPE == 2 || C_PHY_TYPE == 3) && C_TEMAC1_ENABLED == 1 )
PORT RGMII_TXC_1 = "", DIR = O, ISVALID = ( (C_PHY_TYPE == 2 || C_PHY_TYPE == 3) && C_TEMAC1_ENABLED == 1 )
PORT RGMII_RXD_1 = "", DIR = I, VEC = [3:0], ENDIAN = LITTLE, INITIALVAL = GND, ISVALID = ( (C_PHY_TYPE == 2 || C_PHY_TYPE == 3) && C_TEMAC1_ENABLED == 1 )
PORT RGMII_RX_CTL_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( (C_PHY_TYPE == 2 || C_PHY_TYPE == 3) && C_TEMAC1_ENABLED == 1 )
PORT RGMII_RXC_1 = "", DIR = I, INITIALVAL = GND, ISVALID = ( (C_PHY_TYPE == 2 || C_PHY_TYPE == 3) && C_TEMAC1_ENABLED == 1 )
PORT MDC_0 = "", DIR = O, IO_IF = temacif_0, IO_IS = MDC_0
PORT MDC_1 = "", DIR = O, IO_IF = temacif_1, IO_IS = MDC_1, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT HostMiimRdy = host_mii_rdy, DIR = I
PORT HostRdData = host_rd_data, DIR = I, VEC = [31:0], ENDIAN = LITTLE
PORT HostMiimSel = host_mii_sel, DIR = O
PORT HostReq = host_req, DIR = O
PORT HostAddr = host_addr, DIR = O, VEC = [9:0], ENDIAN = LITTLE
PORT HostEmac1Sel = host_emac1_sel, DIR = O
PORT Temac0AvbTxClk = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Temac0AvbTxClkEn = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Temac0AvbRxClk = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Temac0AvbRxClkEn = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Avb2Mac0TxData = "", DIR = I, INITIALVAL = GND, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Avb2Mac0TxDataValid = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Avb2Mac0TxUnderrun = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Mac02AvbTxAck = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Mac02AvbRxData = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Mac02AvbRxDataValid = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Mac02AvbRxFrameGood = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Mac02AvbRxFrameBad = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Temac02AvbTxData = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Temac02AvbTxDataValid = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Temac02AvbTxUnderrun = "", DIR = O, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Avb2Temac0TxAck = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Avb2Temac0RxData = "", DIR = I, INITIALVAL = GND, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Avb2Temac0RxDataValid = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Avb2Temac0RxFrameGood = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Avb2Temac0RxFrameBad = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC0_AVB == 1 )
PORT Temac1AvbTxClk = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Temac1AvbTxClkEn = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Temac1AvbRxClk = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Temac1AvbRxClkEn = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Avb2Mac1TxData = "", DIR = I, INITIALVAL = GND, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Avb2Mac1TxDataValid = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Avb2Mac1TxUnderrun = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Mac12AvbTxAck = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Mac12AvbRxData = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Mac12AvbRxDataValid = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Mac12AvbRxFrameGood = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Mac12AvbRxFrameBad = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Temac12AvbTxData = "", DIR = O, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Temac12AvbTxDataValid = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Temac12AvbTxUnderrun = "", DIR = O, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Avb2Temac1TxAck = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Avb2Temac1RxData = "", DIR = I, INITIALVAL = GND, VEC = [7:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Avb2Temac1RxDataValid = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Avb2Temac1RxFrameGood = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT Avb2Temac1RxFrameBad = "", DIR = I, INITIALVAL = GND, ISVALID = ( C_TEMAC1_AVB == 1 && C_TEMAC1_ENABLED == 1 )
PORT TxClientClk_0 = "", DIR = O, ISVALID = ( C_TEMAC0_STATS == 1 )
PORT ClientTxStat_0 = "", DIR = O, ISVALID = ( C_TEMAC0_STATS == 1 )
PORT ClientTxStatsVld_0 = "", DIR = O, ISVALID = ( C_TEMAC0_STATS == 1 )
PORT ClientTxStatsByteVld_0 = "", DIR = O, ISVALID = ( C_TEMAC0_STATS == 1 )
PORT RxClientClk_0 = "", DIR = O, ISVALID = ( C_TEMAC0_STATS == 1 )
PORT ClientRxStats_0 = "", DIR = O, VEC = [6:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC0_STATS == 1 )
PORT ClientRxStatsVld_0 = "", DIR = O, ISVALID = ( C_TEMAC0_STATS == 1 )
PORT ClientRxStatsByteVld_0 = "", DIR = O, ISVALID = ( C_TEMAC0_STATS == 1 )
PORT TxClientClk_1 = "", DIR = O, ISVALID = ( C_TEMAC1_ENABLED == 1 && C_TEMAC1_STATS == 1 )
PORT ClientTxStat_1 = "", DIR = O, ISVALID = ( C_TEMAC1_ENABLED == 1 && C_TEMAC1_STATS == 1 )
PORT ClientTxStatsVld_1 = "", DIR = O, ISVALID = ( C_TEMAC1_ENABLED == 1 && C_TEMAC1_STATS == 1 )
PORT ClientTxStatsByteVld_1 = "", DIR = O, ISVALID = ( C_TEMAC1_ENABLED == 1 && C_TEMAC1_STATS == 1 )
PORT RxClientClk_1 = "", DIR = O, ISVALID = ( C_TEMAC1_ENABLED == 1 && C_TEMAC1_STATS == 1 )
PORT ClientRxStats_1 = "", DIR = O, VEC = [6:0], ENDIAN = LITTLE, ISVALID = ( C_TEMAC1_ENABLED == 1 && C_TEMAC1_STATS == 1 )
PORT ClientRxStatsVld_1 = "", DIR = O, ISVALID = ( C_TEMAC1_ENABLED == 1 && C_TEMAC1_STATS == 1 )
PORT ClientRxStatsByteVld_1 = "", DIR = O, ISVALID = ( C_TEMAC1_ENABLED == 1 && C_TEMAC1_STATS == 1 )
PORT MDIO_0_I = "", DIR = I, INITIALVAL = VCC, IO_IF = temacif_0, IO_IS = MDIO_0_I
PORT MDIO_0_O = "", DIR = O, INITIALVAL = VCC, IO_IF = temacif_0, IO_IS = MDIO_0_O
PORT MDIO_0_T = "", DIR = O, INITIALVAL = VCC, IO_IF = temacif_0, IO_IS = MDIO_0_T
PORT MDIO_0 = "", DIR = IO, THREE_STATE = TRUE, INITIALVAL = VCC, IO_IF = temacif_0, IO_IS = MDIO_0, TRI_I = MDIO_0_I, TRI_O = MDIO_0_O, TRI_T = MDIO_0_T
PORT MDIO_1_I = "", DIR = I, INITIALVAL = VCC, IO_IF = temacif_1, IO_IS = MDIO_1_I, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT MDIO_1_O = "", DIR = O, INITIALVAL = VCC, IO_IF = temacif_1, IO_IS = MDIO_1_O, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT MDIO_1_T = "", DIR = O, INITIALVAL = VCC, IO_IF = temacif_1, IO_IS = MDIO_1_T, ISVALID = ( C_TEMAC1_ENABLED == 1 )
PORT MDIO_1 = "", DIR = IO, THREE_STATE = TRUE, INITIALVAL = VCC, IO_IF = temacif_1, IO_IS = MDIO_1, ISVALID = ( C_TEMAC1_ENABLED == 1 ), TRI_I = MDIO_1_I, TRI_O = MDIO_1_O, TRI_T = MDIO_1_T

END
